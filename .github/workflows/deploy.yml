name: Deploy to Amazon EC2

on:
  push:
    branches: [ main ]

# 환경 변수 정의
env:
  AWS_REGION: ap-northeast-2  # 리전
  S3_BUCKET_NAME: areyoutravelers-bucket  # S3 bucket 이름

permissions:
  contents: read # 리포지토리 콘텐츠 읽기 권한

jobs:
  build_and_deploy:
    name: build and deploy
    runs-on: ubuntu-latest # Ubuntu 최신 버전에서 실행

    steps:
      # 1) 소스코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2) JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3) Gradle 캐싱
      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # 4) application.yml 파일 생성
      - name: Make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash

      # 5) graddlew 실행 권한 부여 (gradlew를 실행 가능한 상태로 만듦)
      - name: Add permission to gradlew
        run: chmod +x gradlew
        
      # 6) Gradle을 사용하여 jar파일 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test # Gradle 빌드 명령 실행, 테스트 제외

      # 7) zip 파일 생성
      - name: Make zip file
        run: |
          mkdir deploy
          cp ./build/libs/*.jar ./deploy/
          zip -r -qq -j ./areyoutravelers.zip ./deploy  # zip 파일 생성
          echo "현재 디렉토리 내용:"
          pwd
          ls -la  # 현재 디렉토리 내용 출력
          echo "deploy 디렉토리 내용:"
          ls -la deploy  # deploy 디렉토리 내용 출력

      # 8) AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify zip file
        run: |
          echo "현재 디렉토리 내용 (deploy 단계):"
          pwd
          ls -la
          echo "areyoutravelers.zip 파일 내용 (deploy 단계):"
          unzip -l areyoutravelers.zip  # zip 파일 내용 출력

      # 9) S3 업로드
      - name: Upload to S3
        run: |
          aws s3 cp \
            --region ${{ env.AWS_REGION }} \
            areyoutravelers.zip s3://${{ env.S3_BUCKET_NAME }}
